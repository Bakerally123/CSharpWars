# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

pool:
  vmImage: 'windows-2019'

variables:
  solution: '**/backend/**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:

- task: DotNetCoreInstaller@0
  displayName: Install latest version of .NET Core (3.0.100-preview-010184)
  inputs:
    version: '3.0.100-preview-010184'

- task: DotNetCoreCLI@2
  displayName: Restore NuGet packages
  inputs:
    command: 'restore'
    projects: '**/backend/**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: Build Solution
  inputs:
    command: 'build'
    projects: '**/backend/**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: Run UnitTests
  inputs:
    command: 'test'
    projects: '**/backend/**/*.csproj'

- script: |
    dotnet publish .\src\backend\CSharpWars\CSharpWars.Web.Api --configuration "Release" --output ./bin/Release/publish
    
- script: |
    docker build -t djohnnie/csharpwars-api ./src/backend/CSharpWars/CSharpWars.Web.Api
    docker login -u $(dockerId) -p $(dockerPwd)
    docker push djohnnie/csharpwars-api
